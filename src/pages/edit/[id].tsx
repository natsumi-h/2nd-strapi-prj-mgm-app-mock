import {
  GetServerSideProps,
  GetServerSidePropsContext,
  NextApiRequest,
  NextPage,
} from "next";
import cookie from "cookie";
import Head from "next/head";
import styles from "../../styles/Home.module.scss";
import EditComponent from "../../component/edit";
import { API_URL } from "../../config";
import { IncomingMessage } from "http";

type Props = {
  token: string;
  id: number;
  project: {
    data: {
      attributes: {
        projectName: string;
        status: string;
        sales: string;
        related_area: {
          data: {
            id: number;
          };
        };
        related_branch: {
          data: {
            id: number;
          };
        };
        pm: {
          data: {
            id: number;
          };
        };
      };
    };
  };
};

const EditPage: NextPage<Props> = ({ token, id, project }) => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Edit title</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <EditComponent token={token} id={id} project={project} />
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async (
  context: GetServerSidePropsContext
) => {
  const req: IncomingMessage = context.req;
  const id = context.params && context.params.id;
  const parseCookies = (req: IncomingMessage) => {
    return cookie.parse(req ? req.headers.cookie || "" : "");
  };
  const { token } = parseCookies(req);

  const projectRes = await fetch(`${API_URL}/projects/${id}?populate=*`, {
    headers: {
      Authorization: `Bearer ${token}`,
    },
  });
  const project = await projectRes.json();

  return token
    ? {
        props: {
          token,
          id,
          project,
        },
      }
    : {
        props: {
          id,
        },
      };
};

export default EditPage;
